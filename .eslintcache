[{"D:\\reactapps\\bs-\\src\\index.js":"1","D:\\reactapps\\bs-\\src\\serviceWorker.js":"2","D:\\reactapps\\bs-\\src\\App.js":"3","D:\\reactapps\\bs-\\src\\components\\MainComponent.js":"4","D:\\reactapps\\bs-\\src\\redux\\configureStore.js":"5","D:\\reactapps\\bs-\\src\\components\\MenuComponent.js":"6","D:\\reactapps\\bs-\\src\\components\\HeaderComponent.js":"7","D:\\reactapps\\bs-\\src\\components\\DishdetailComponent.js":"8","D:\\reactapps\\bs-\\src\\components\\AboutComponent.js":"9","D:\\reactapps\\bs-\\src\\components\\ContactComponent.js":"10","D:\\reactapps\\bs-\\src\\components\\FooterComponent.js":"11","D:\\reactapps\\bs-\\src\\components\\HomeComponent.js":"12","D:\\reactapps\\bs-\\src\\redux\\comments.js":"13","D:\\reactapps\\bs-\\src\\redux\\dishes.js":"14","D:\\reactapps\\bs-\\src\\redux\\ActionCreators.js":"15","D:\\reactapps\\bs-\\src\\redux\\leaders.js":"16","D:\\reactapps\\bs-\\src\\redux\\promotions.js":"17","D:\\reactapps\\bs-\\src\\redux\\carouselimages.js":"18","D:\\reactapps\\bs-\\src\\redux\\forms.js":"19","D:\\reactapps\\bs-\\src\\components\\LoadingComponent.js":"20","D:\\reactapps\\bs-\\src\\redux\\ActionTypes.js":"21","D:\\reactapps\\bs-\\src\\shared\\baseUrl.js":"22"},{"size":606,"mtime":1607315605378,"results":"23","hashOfConfig":"24"},{"size":4961,"mtime":1607315702119,"results":"25","hashOfConfig":"24"},{"size":570,"mtime":1607315600432,"results":"26","hashOfConfig":"24"},{"size":5340,"mtime":1607315578676,"results":"27","hashOfConfig":"24"},{"size":935,"mtime":1607390678238,"results":"28","hashOfConfig":"24"},{"size":2549,"mtime":1607315577435,"results":"29","hashOfConfig":"24"},{"size":9780,"mtime":1607396161481,"results":"30","hashOfConfig":"24"},{"size":6700,"mtime":1607315568208,"results":"31","hashOfConfig":"24"},{"size":5125,"mtime":1607315572456,"results":"32","hashOfConfig":"24"},{"size":9902,"mtime":1607315571106,"results":"33","hashOfConfig":"24"},{"size":2983,"mtime":1607315564712,"results":"34","hashOfConfig":"24"},{"size":4364,"mtime":1607364524464,"results":"35","hashOfConfig":"24"},{"size":676,"mtime":1607315592711,"results":"36","hashOfConfig":"24"},{"size":656,"mtime":1607315594056,"results":"37","hashOfConfig":"24"},{"size":10486,"mtime":1607315589268,"results":"38","hashOfConfig":"24"},{"size":666,"mtime":1607315595467,"results":"39","hashOfConfig":"24"},{"size":678,"mtime":1607315596751,"results":"40","hashOfConfig":"24"},{"size":699,"mtime":1607315591701,"results":"41","hashOfConfig":"24"},{"size":402,"mtime":1607390635555,"results":"42","hashOfConfig":"24"},{"size":235,"mtime":1607315579388,"results":"43","hashOfConfig":"24"},{"size":834,"mtime":1607315590504,"results":"44","hashOfConfig":"24"},{"size":50,"mtime":1607315597821,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1hqlgyg",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\reactapps\\bs-\\src\\index.js",[],["94","95"],"D:\\reactapps\\bs-\\src\\serviceWorker.js",[],"D:\\reactapps\\bs-\\src\\App.js",[],"D:\\reactapps\\bs-\\src\\components\\MainComponent.js",[],"D:\\reactapps\\bs-\\src\\redux\\configureStore.js",[],"D:\\reactapps\\bs-\\src\\components\\MenuComponent.js",[],"D:\\reactapps\\bs-\\src\\components\\HeaderComponent.js",[],"D:\\reactapps\\bs-\\src\\components\\DishdetailComponent.js",["96","97","98"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Modal,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Row,\r\n  Label,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n      <FadeTransform\r\n        in\r\n        transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}\r\n      >\r\n        <Card>\r\n          <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n  const commentList = comments.map((comment) => {\r\n    return (\r\n      <Fade in>\r\n        <li key={comment.id} className=\"text-white\">\r\n          <div>\r\n            <p>{comment.comment}</p>\r\n            <p>\r\n              --{comment.author}, &nbsp;\r\n              {new Intl.DateTimeFormat(\"en-US\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"2-digit\",\r\n              }).format(new Date(Date.parse(comment.date)))}\r\n            </p>\r\n            <br />\r\n          </div>\r\n        </li>\r\n      </Fade>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1 text-white\">\r\n      <h4>Comments</h4>\r\n      <ul className=\"list-unstyled\">\r\n        <Stagger in>{commentList}</Stagger>\r\n      </ul>\r\n      <CommentForm dishId={dishId} postComment={postComment} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row text-white\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments\r\n            comments={props.comments}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nexport default DishDetail;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg text-white\"></span> Submit Comment\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"rating\">Rating</Label>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    id=\"rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"author\">Your Name</Label>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 3 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"comment\">Comment</Label>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows=\"6\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Submit comment\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\reactapps\\bs-\\src\\components\\AboutComponent.js",[],"D:\\reactapps\\bs-\\src\\components\\ContactComponent.js",["99","100","101","102","103","104","105"],"import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Label,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(values) {\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n    this.props.resetFeedbackForm();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container text-white\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              AIN AL MRAYSE STREET\r\n              <br />\r\n              ZAITUNA BAY\r\n              <br />\r\n              LEBANON\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +961 70 701111\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +961 70 701112\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:bs&ps@food.net\">bs&ps@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+96170701111\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" href=\"skype:none\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:bs&ps@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send Us Your Feedback</h3>\r\n            <hr />\r\n            <div className=\" col-12 col-md-9\">\r\n              <Form\r\n                model=\"feedback\"\r\n                onSubmit={(values) => this.handleSubmit(values)}\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlfor=\"firstname\" md={2}>\r\n                    First Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".firstname\"\r\n                      id=\"firstname\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"First Name\"\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15),\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".firstname\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 2 characters\",\r\n                        maxLength: \"Must be 15 characters or less\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlfor=\"lastname\" md={2}>\r\n                    First Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".lastname\"\r\n                      className=\"form-control\"\r\n                      id=\"lastname\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Last Name\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15),\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".lastname\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required \",\r\n                        minLength: \" Must be greater than 2 characters \",\r\n                        maxLength: \" Must be 15 characters or less\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlfor=\"telnum\" md={2}>\r\n                    Contact Tel.\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      className=\"form-control\"\r\n                      model=\".telnum\"\r\n                      id=\"telnum\"\r\n                      name=\"telnum\"\r\n                      placeholder=\"Tel. Number\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15),\r\n                        isNumber,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".telnum\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \" Required\",\r\n                        minLength: \" Must be greater than 2 numbers \",\r\n                        maxLength: \" Must be 15 numbers or less \",\r\n                        isNumber: \" Must be a number \",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlfor=\"email\" md={2}>\r\n                    Email\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      className=\"form-control\"\r\n                      model=\".email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      validators={{\r\n                        required,\r\n                        validEmail,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".email\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \" Required \",\r\n                        validEmail: \" Invalid Email Address \",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 6, offset: 2 }}>\r\n                    <div className=\"form-check\">\r\n                      <Label check>\r\n                        <Control.checkbox\r\n                          model=\".agree\"\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          name=\"agree\"\r\n                        />{\" \"}\r\n                        <strong>May we contact you?</strong>\r\n                      </Label>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={{ size: 3, offset: 1 }}>\r\n                    <Control.select\r\n                      model=\".contactType\"\r\n                      name=\"contactType\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option>Tel.</option>\r\n                      <option>Email</option>\r\n                    </Control.select>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlfor=\"feedback\" md={2}>\r\n                    Your Feedback\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.textarea\r\n                      model=\".message\"\r\n                      type=\"textarea\"\r\n                      className=\"form-control\"\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      placeholder=\"Give us your Feedback...\"\r\n                      rows=\"12\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                      Send Feedback\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","D:\\reactapps\\bs-\\src\\components\\FooterComponent.js",[],"D:\\reactapps\\bs-\\src\\components\\HomeComponent.js",["106"],"import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselCaption,\r\n  CarouselIndicators,\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport \"../App.css\";\r\nimport { FadeTransform, Fade } from \"react-animation-components\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else\r\n    return (\r\n      <Card>\r\n        <CardImg\r\n          src={baseUrl + item.image}\r\n          width=\"300\"\r\n          height=\"200\"\r\n          alt={item.name}\r\n        />\r\n        <CardBody>\r\n          <CardTitle>{item.name}</CardTitle>\r\n          {item.designation ? (\r\n            <CardSubtitle>{item.designation}</CardSubtitle>\r\n          ) : null}\r\n          <CardText>{item.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n}\r\nfunction RenderCarousel({ items, isLoading, errMess }) {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else {\r\n    const next = () => {\r\n      if (animating) return;\r\n      const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n      setActiveIndex(nextIndex);\r\n    };\r\n\r\n    const previous = () => {\r\n      if (animating) return;\r\n      const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n      setActiveIndex(nextIndex);\r\n    };\r\n\r\n    const goToIndex = (newIndex) => {\r\n      if (animating) return;\r\n      setActiveIndex(newIndex);\r\n    };\r\n\r\n    const slides = items.map((item) => {\r\n      return (\r\n        <CarouselItem\r\n          className=\"m-auto\"\r\n          onExiting={() => setAnimating(true)}\r\n          onExited={() => setAnimating(false)}\r\n          key={item.src}\r\n        >\r\n          <img\r\n            className=\"img img-responsive\"\r\n            width=\"100%\"\r\n            height=\"400\"\r\n            src={baseUrl + item.src}\r\n            alt={item.altText}\r\n          />\r\n          <Link to=\"/menu\">\r\n            <CarouselCaption\r\n              className=\"text-warning\"\r\n              captionHeader={item.header}\r\n            />\r\n          </Link>\r\n        </CarouselItem>\r\n      );\r\n    });\r\n    return (\r\n      <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n        <CarouselIndicators\r\n          items={items}\r\n          activeIndex={activeIndex}\r\n          onClickHandler={goToIndex}\r\n        />\r\n        {slides}\r\n        <CarouselControl\r\n          direction=\"prev\"\r\n          directionText=\"Previous\"\r\n          onClickHandler={previous}\r\n        />\r\n        <CarouselControl\r\n          direction=\"next\"\r\n          directionText=\"Next\"\r\n          onClickHandler={next}\r\n        />\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-content-center\">\r\n        <div className=\"col-12\">\r\n          <RenderCarousel\r\n            items={props.cimages}\r\n            isLoading={props.cimagesLoading}\r\n            errMess={props.cimagesErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <FadeTransform\r\n        in\r\n        transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}\r\n      >\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard\r\n              item={props.dish}\r\n              isLoading={props.dishesLoading}\r\n              errMess={props.dishesErrMess}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard\r\n              item={props.promotions}\r\n              isLoading={props.promosLoading}\r\n              errMess={props.promosErrMess}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard\r\n              item={props.leader}\r\n              isLoading={props.leadersLoading}\r\n              errMess={props.leadersErrMess}\r\n            />\r\n          </div>\r\n        </div>\r\n      </FadeTransform>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\reactapps\\bs-\\src\\redux\\comments.js",[],"D:\\reactapps\\bs-\\src\\redux\\dishes.js",[],"D:\\reactapps\\bs-\\src\\redux\\ActionCreators.js",[],"D:\\reactapps\\bs-\\src\\redux\\leaders.js",[],"D:\\reactapps\\bs-\\src\\redux\\promotions.js",[],"D:\\reactapps\\bs-\\src\\redux\\carouselimages.js",[],"D:\\reactapps\\bs-\\src\\redux\\forms.js",[],"D:\\reactapps\\bs-\\src\\components\\LoadingComponent.js",[],"D:\\reactapps\\bs-\\src\\redux\\ActionTypes.js",[],"D:\\reactapps\\bs-\\src\\shared\\baseUrl.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":163,"column":19,"nodeType":"113","endLine":168,"endColumn":20},{"ruleId":"111","severity":1,"message":"114","line":181,"column":19,"nodeType":"113","endLine":192,"endColumn":21},{"ruleId":"111","severity":1,"message":"115","line":209,"column":19,"nodeType":"113","endLine":215,"endColumn":21},{"ruleId":"111","severity":1,"message":"114","line":111,"column":21,"nodeType":"113","endLine":122,"endColumn":23},{"ruleId":"111","severity":1,"message":"114","line":140,"column":21,"nodeType":"113","endLine":151,"endColumn":23},{"ruleId":"111","severity":1,"message":"114","line":169,"column":21,"nodeType":"113","endLine":181,"endColumn":23},{"ruleId":"111","severity":1,"message":"114","line":200,"column":21,"nodeType":"113","endLine":210,"endColumn":23},{"ruleId":"111","severity":1,"message":"116","line":226,"column":25,"nodeType":"113","endLine":231,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":237,"column":21,"nodeType":"113","endLine":241,"endColumn":22},{"ruleId":"111","severity":1,"message":"115","line":252,"column":21,"nodeType":"113","endLine":260,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":18,"column":25,"nodeType":"119","messageId":"120","endLine":18,"endColumn":29},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Fade' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]